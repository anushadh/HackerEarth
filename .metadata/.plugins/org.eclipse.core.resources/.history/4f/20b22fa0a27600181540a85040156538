package binarySearch;

import java.util.Arrays;
import java.util.Scanner;

/*You are given an array A of size N, and Q queries to deal with. For each query, 
you are given an integer X, and you're supposed to find out if X is present in the array A or not.

Input:
The first line contains two integers, N and Q, denoting the size of array A and 
number of queries. The second line contains N space separated integers, denoting
the array of elements Ai. The next Q lines contain a single integer X per line.

Output:
For each query, print YES if the X is in the array, otherwise print NO.
*/
public class DiscovertheMonk {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int Q = sc.nextInt();
		if(N >= 1 && Q<= Math.pow(10, 5)) {
			int[] array = new int[N];
			for(int i = 0; i < N; i++) {
				int a = sc.nextInt();
				if(a >= 1 && a <= Math.pow(10, 9)) {
					array[i] = a;
				}
			}
			for(int i = 0; i < Q; i++) {
				int X = sc.nextInt();
				if(X >= 1 && X <= Math.pow(10, 9)) {
					String isXFound = findXInArray(array, X);
					System.out.println(isXFound);
				}
			}
		}

	}

	private static String findXInArray(int[] array, int x) {
		Arrays.sort(array);
		int start = 0;
		int end = array.length - 1;
		while(start < end) {
			
		}
		return "NO";
	}

}
